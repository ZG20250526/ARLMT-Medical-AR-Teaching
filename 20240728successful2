(llava) guoyunfei@tme-GS4840:~/projects/LLaVA-main/llava$ TRANSFORMERS_OFFLINE=1 HF_HUB_OFFLINE=1 . pretrain.sh 
[2024-07-28 18:00:41,912] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:43,794] [WARNING] [runner.py:202:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
[2024-07-28 18:00:43,795] [INFO] [runner.py:571:main] cmd = /home/guoyunfei/.conda/envs/llava/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbMCwgMSwgMiwgMywgNCwgNSwgNiwgN119 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None /home/guoyunfei/projects/LLaVA-main/llava/train/train_mem.py --deepspeed /home/guoyunfei/projects/LLaVA-main/scripts/zero2.json --model_name_or_path /data0/GYF/offline_model/liuhaotian/llava-v1.6-mistral-7b --version plain --data_path /data0/GYF/data/llava-med/data/select1millionpictures2024072801.json --image_folder /data0/GYF/data/llava-med/data/images --vision_tower /data0/GYF/offline_model/openai/clip-vit-large-patch14-336 --mm_projector_type mlp2x_gelu --tune_mm_mlp_adapter True --mm_vision_select_layer -2 --mm_use_im_start_end False --mm_use_im_patch_token False --bf16 True --output_dir /home/guoyunfei/projects/LLaVA-main/llava/checkpoints/llava-v1.6-7b-pretrain --num_train_epochs 1 --per_device_train_batch_size 16 --per_device_eval_batch_size 4 --gradient_accumulation_steps 1 --evaluation_strategy no --save_strategy steps --save_steps 24000 --save_total_limit 1 --learning_rate 1e-3 --weight_decay 0. --warmup_ratio 0.03 --lr_scheduler_type cosine --logging_steps 1 --tf32 True --model_max_length 2048 --gradient_checkpointing True --dataloader_num_workers 4 --lazy_preprocess True --report_to wandb
[2024-07-28 18:00:46,898] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:48,923] [INFO] [launch.py:145:main] WORLD INFO DICT: {'localhost': [0, 1, 2, 3, 4, 5, 6, 7]}
[2024-07-28 18:00:48,923] [INFO] [launch.py:151:main] nnodes=1, num_local_procs=8, node_rank=0
[2024-07-28 18:00:48,923] [INFO] [launch.py:162:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0, 1, 2, 3, 4, 5, 6, 7]})
[2024-07-28 18:00:48,923] [INFO] [launch.py:163:main] dist_world_size=8
[2024-07-28 18:00:48,923] [INFO] [launch.py:165:main] Setting CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7
[2024-07-28 18:00:53,087] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,285] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,525] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,529] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,604] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,630] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,909] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:53,913] [INFO] [real_accelerator.py:161:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-07-28 18:00:54,536] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:54,586] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:54,940] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:54,998] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:55,016] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:55,016] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
[2024-07-28 18:00:55,035] [INFO] [comm.py:637:init_distributed] cdb=None
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[2024-07-28 18:00:55,281] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-07-28 18:00:55,400] [INFO] [comm.py:637:init_distributed] cdb=None
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
You are using a model of type llava_mistral to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:53<00:00, 13.42s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:52<00:00, 13.23s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:52<00:00, 13.22s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:53<00:00, 13.37s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:53<00:00, 13.27s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:52<00:00, 13.14s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:53<00:00, 13.38s/it]
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████| 4/4 [00:52<00:00, 13.18s/it]
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
openai/clip-vit-large-patch14-336 is already loaded, `load_model` called again, skipping.
Formatting inputs...Skip in lazy mode
wandb: Currently logged in as: james20201124 (james20201124-temple-university). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.17.5
wandb: Run data is saved locally in /home/guoyunfei/projects/LLaVA-main/llava/wandb/run-20240728_180228-49apxwpy
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run deep-sun-6
wandb: ⭐️ View project at https://wandb.ai/james20201124-temple-university/huggingface
wandb: 🚀 View run at https://wandb.ai/james20201124-temple-university/huggingface/runs/49apxwpy
  0%|                                                                                                                  | 0/60 [00:00<?, ?it/s]/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/torch/utils/checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
/home/guoyunfei/.conda/envs/llava/lib/python3.10/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1652: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:83.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
{'loss': 1.8937, 'learning_rate': 0.0005, 'epoch': 0.02}                                                                                      
{'loss': 1.8102, 'learning_rate': 0.001, 'epoch': 0.03}                                                                                       
{'loss': 1.8362, 'learning_rate': 0.0009992667069255619, 'epoch': 0.05}                                                                       
{'loss': 1.7419, 'learning_rate': 0.0009970689785771798, 'epoch': 0.07}                                                                       
{'loss': 1.84, 'learning_rate': 0.0009934132612707631, 'epoch': 0.08}                                                                         
{'loss': 1.8539, 'learning_rate': 0.0009883102778550433, 'epoch': 0.1}                                                                        
{'loss': 1.8707, 'learning_rate': 0.0009817749962596114, 'epoch': 0.12}                                                                       
{'loss': 1.7912, 'learning_rate': 0.0009738265855914012, 'epoch': 0.13}                                                                       
{'loss': 1.758, 'learning_rate': 0.0009644883599083958, 'epoch': 0.15}                                                                        
{'loss': 1.7931, 'learning_rate': 0.0009537877098354786, 'epoch': 0.17}                                                                       
{'loss': 1.8671, 'learning_rate': 0.0009417560222230115, 'epoch': 0.18}                                                                       
{'loss': 1.7708, 'learning_rate': 0.0009284285880837946, 'epoch': 0.2}                                                                        
{'loss': 1.7327, 'learning_rate': 0.0009138444990784454, 'epoch': 0.22}                                                                       
{'loss': 1.7846, 'learning_rate': 0.0008980465328528219, 'epoch': 0.23}                                                                       
{'loss': 1.8443, 'learning_rate': 0.0008810810275638182, 'epoch': 0.25}                                                                       
{'loss': 1.7379, 'learning_rate': 0.0008629977459615654, 'epoch': 0.27}                                                                       
{'loss': 1.8598, 'learning_rate': 0.0008438497294267117, 'epoch': 0.28}                                                                       
{'loss': 1.8684, 'learning_rate': 0.0008236931423909139, 'epoch': 0.3}                                                                        
{'loss': 1.7759, 'learning_rate': 0.0008025871075968827, 'epoch': 0.32}                                                                       
{'loss': 1.7176, 'learning_rate': 0.0007805935326811913, 'epoch': 0.33}                                                                       
{'loss': 1.7391, 'learning_rate': 0.0007577769285885109, 'epoch': 0.35}                                                                       
{'loss': 1.7521, 'learning_rate': 0.0007342042203498951, 'epoch': 0.37}                                                                       
{'loss': 1.7632, 'learning_rate': 0.0007099445507801323, 'epoch': 0.38}                                                                       
{'loss': 1.845, 'learning_rate': 0.0006850690776699573, 'epoch': 0.4}                                                                         
{'loss': 1.8865, 'learning_rate': 0.00065965076506799, 'epoch': 0.42}                                                                         
{'loss': 1.8221, 'learning_rate': 0.0006337641692646106, 'epoch': 0.43}                                                                       
{'loss': 1.6968, 'learning_rate': 0.0006074852201055121, 'epoch': 0.45}                                                                       
{'loss': 1.7754, 'learning_rate': 0.0005808909982763825, 'epoch': 0.47}                                                                       
{'loss': 1.8207, 'learning_rate': 0.0005540595092119709, 'epoch': 0.48}                                                                       
{'loss': 1.817, 'learning_rate': 0.0005270694542927088, 'epoch': 0.5}                                                                         
{'loss': 1.7434, 'learning_rate': 0.0005, 'epoch': 0.52}                                                                                      
{'loss': 1.8052, 'learning_rate': 0.00047293054570729125, 'epoch': 0.53}                                                                      
{'loss': 1.825, 'learning_rate': 0.0004459404907880292, 'epoch': 0.55}                                                                        
{'loss': 1.8035, 'learning_rate': 0.00041910900172361764, 'epoch': 0.57}                                                                      
{'loss': 1.7319, 'learning_rate': 0.00039251477989448797, 'epoch': 0.58}                                                                      
{'loss': 1.7623, 'learning_rate': 0.0003662358307353897, 'epoch': 0.6}                                                                        
{'loss': 1.8239, 'learning_rate': 0.0003403492349320101, 'epoch': 0.62}                                                                       
{'loss': 1.6458, 'learning_rate': 0.0003149309223300428, 'epoch': 0.63}                                                                       
{'loss': 1.8378, 'learning_rate': 0.0002900554492198677, 'epoch': 0.65}                                                                       
{'loss': 1.744, 'learning_rate': 0.000265795779650105, 'epoch': 0.67}                                                                         
{'loss': 1.7293, 'learning_rate': 0.00024222307141148907, 'epoch': 0.68}                                                                      
{'loss': 1.7906, 'learning_rate': 0.00021940646731880887, 'epoch': 0.7}                                                                       
{'loss': 1.7708, 'learning_rate': 0.00019741289240311755, 'epoch': 0.72}                                                                      
{'loss': 1.7958, 'learning_rate': 0.00017630685760908622, 'epoch': 0.73}                                                                      
{'loss': 1.7828, 'learning_rate': 0.00015615027057328828, 'epoch': 0.75}                                                                      
{'loss': 1.7273, 'learning_rate': 0.00013700225403843468, 'epoch': 0.77}                                                                      
{'loss': 1.818, 'learning_rate': 0.00011891897243618183, 'epoch': 0.78}                                                                       
{'loss': 1.7472, 'learning_rate': 0.00010195346714717812, 'epoch': 0.8}                                                                       
{'loss': 1.8264, 'learning_rate': 8.615550092155477e-05, 'epoch': 0.82}                                                                       
{'loss': 1.7341, 'learning_rate': 7.157141191620547e-05, 'epoch': 0.83}                                                                       
{'loss': 1.7021, 'learning_rate': 5.8243977776988585e-05, 'epoch': 0.85}                                                                      
{'loss': 1.7005, 'learning_rate': 4.621229016452155e-05, 'epoch': 0.87}                                                                       
{'loss': 1.72, 'learning_rate': 3.551164009160429e-05, 'epoch': 0.88}                                                                         
{'loss': 1.6548, 'learning_rate': 2.617341440859883e-05, 'epoch': 0.9}                                                                        
{'loss': 1.7395, 'learning_rate': 1.8225003740388545e-05, 'epoch': 0.92}                                                                      
{'loss': 1.7173, 'learning_rate': 1.1689722144956671e-05, 'epoch': 0.93}                                                                      
{'loss': 1.6955, 'learning_rate': 6.58673872923693e-06, 'epoch': 0.95}                                                                        
{'loss': 1.7474, 'learning_rate': 2.9310214228202015e-06, 'epoch': 0.97}                                                                      
{'loss': 1.6853, 'learning_rate': 7.332930744380905e-07, 'epoch': 0.98}                                                                       
{'loss': 1.7843, 'learning_rate': 0.0, 'epoch': 1.0}                                                                                          
{'train_runtime': 370.4476, 'train_samples_per_second': 20.551, 'train_steps_per_second': 0.162, 'train_loss': 1.7776305635770162, 'epoch': 1.0}
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 60/60 [05:57<00:00,  5.96s/it]
[2024-07-28 18:08:40,410] [INFO] [launch.py:347:main] Process 693339 exits successfully.
[2024-07-28 18:08:41,411] [INFO] [launch.py:347:main] Process 693338 exits successfully.
[2024-07-28 18:08:41,411] [INFO] [launch.py:347:main] Process 693343 exits successfully.
[2024-07-28 18:08:41,411] [INFO] [launch.py:347:main] Process 693342 exits successfully.
[2024-07-28 18:08:41,411] [INFO] [launch.py:347:main] Process 693340 exits successfully.
[2024-07-28 18:08:41,412] [INFO] [launch.py:347:main] Process 693344 exits successfully.
[2024-07-28 18:08:41,412] [INFO] [launch.py:347:main] Process 693341 exits successfully.
wandb: \ 0.047 MB of 0.047 MB uploaded
wandb: Run history:
wandb:                    train/epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████
wandb:              train/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████
wandb:            train/learning_rate ▅███████▇▇▇▇▇▆▆▆▆▅▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁
wandb:                     train/loss █▆▄▆▇▅▅▇▃▅▄▇▅▃▄▄█▆▅▆▄▆▅▃▆▁▄▃▅▅▃▆▆▃▃▃▄▃▄▅
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.0
wandb:              train/global_step 60
wandb:            train/learning_rate 0.0
wandb:                     train/loss 1.7843
wandb:               train/total_flos 1.7371820077141197e+17
wandb:               train/train_loss 1.77763
wandb:            train/train_runtime 370.4476
wandb: train/train_samples_per_second 20.551
wandb:   train/train_steps_per_second 0.162
wandb: 
wandb: 🚀 View run deep-sun-6 at: https://wandb.ai/james20201124-temple-university/huggingface/runs/49apxwpy
wandb: ⭐️ View project at: https://wandb.ai/james20201124-temple-university/huggingface
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240728_180228-49apxwpy/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
[2024-07-28 18:08:54,424] [INFO] [launch.py:347:main] Process 693337 exits successfully.

